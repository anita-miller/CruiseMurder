{"version":3,"sources":["res/game-over-sound-effect.mp3","res/vac.jpg","easterEgg.PNG","counter.js","gameover.js","scene.js","map.js","mapSidebar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Counter","state","counter","updateCount","sceneId","requestType","headers","Content-Type","body","JSON","stringify","method","fetch","then","res","json","console","log","catch","error","getCount","data","_this","setState","SceneCount","this","props","react_default","a","createElement","Component","GameOver","endingType","trim","changeTheme","document","getElementsByClassName","style","getElementsByTagName","lastElementChild","ref","src","gameoverSound","display","controls","autoPlay","className","Scene","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","window","scrollTo","scrollHeight","choiceClick","consequent","sceneHandler","result","attachOptions","Choices","buttonHidden","map","choice","i","key","onClick","bind","assertThisInitialized","Consequent","Text","createSceneImage","sceneData","imageToUse","SceneImage","SceneId","handleOpenModal","lib_default","ariaHideApp","isOpen","showModal","contentLabel","groupImage","toggle","_this$props","SceneContent","split","item","index","EndingType","gameover","myMap","outputString","player","playerPosition","x","y","getPlayerCoordination","length","drawMap","MapSidebar","easterEgg","src_map","App","startGame","newContext","push","context","rejected","addScene","newScene","SceneLocation","hiddenButton","makeSceneComponent","scene","src_scene","mute","newState","playing","muteBtnText","title","setTimeout","mapSidebar","YouTube_default","id","url","loop","width","height","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.414278e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/game-over-sound-effect.7ce51a00.mp3\";","module.exports = __webpack_public_path__ + \"static/media/vac.a7f51a68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/easterEgg.5255f166.PNG\";","import React, { Component } from 'react';\r\n\r\n\r\nclass Counter extends Component {\r\n\r\n    state = {\r\n        counter : 0\r\n    }\r\n    async componentDidMount() {\r\n        this.getCount(this.props.sceneId);\r\n        this.updateCount(this.props.sceneId);\r\n\r\n    }\r\n    \r\n//     'Access-Control-Allow-Origin: *');\r\n// header('Access-Control-Allow-Methods: GET, POST, PATCH, PUT, DELETE, OPTIONS');\r\n    updateCount = (sceneId) =>{\r\n        const requestType={\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\"},\r\n            //     \"Access-Control-Allow-Origin\": '*',\r\n            //     \"Access-Control-Allow-Methods\": 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n            //     \"Access-Control-Allow-Headers\": 'Origin, Content-Type,X-Auth-Token'\r\n            // },\r\n            body: JSON.stringify(sceneId),\r\n        \r\n            method: \"POST\"\r\n        };\r\n\r\n        fetch(\"http://localhost:51634/api/EndingRecord/\", requestType)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n              console.log(res)})\r\n            .catch(error => console.log(error));\r\n            \r\n    }\r\n\r\n    getCount = (sceneId) => {\r\n        fetch(\"http://localhost:51634/api/EndingRecord/\" + sceneId)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({counter: data.SceneCount})\r\n            } \r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                hi\r\n                {this.state.counter}\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react';\r\nimport gameoverSound from './res/game-over-sound-effect.mp3';\r\nimport Counter from './counter';\r\n\r\nclass GameOver extends Component {\r\n    componentDidMount(){\r\n        if(this.props.endingType.trim() === \"bad\"){   \r\n            this.changeTheme();\r\n        }\r\n    }\r\n\r\n    changeTheme(){\r\n        document.getElementsByClassName(\"gameHeader\")[0].style = \"background-color: black\";\r\n        document.getElementsByTagName(\"body\")[0].style = \"background-color: black\";\r\n        document.getElementsByTagName(\"div\")[0].style = \"color: red\";\r\n        document.getElementsByClassName(\"sceneList\")[0].lastElementChild.style = \"color: red\";\r\n    }\r\n\r\n    render() {\r\n        const {endingType} = this.props;\r\n        if(endingType.trim() === \"bad\"){            \r\n            return(\r\n                <div>\r\n                    <audio ref=\"audio_tag\" src={gameoverSound} style={{display:\"none\"}} controls autoPlay/>\r\n                    <pre className=\"gameOver\"> \r\n    {'  '},--,     .--.           ,---.    .---..-.   .-.,---.  ,---.    <br></br>\r\n    .' .'     / /\\ \\ |\\    /| | .-'   / .-. )\\ \\ / / | .-'  | .-.\\   <br></br>\r\n    |  |  __ / /__\\ \\|(\\  / | | `-.   | | |(_)\\ V /  | `-.  | `-'/   <br></br>\r\n    \\  \\ ( _)|  __  |(_)\\/  | | .-'   | | | |  ) /   | .-'  |   (    <br></br>\r\n    {' '}\\  `-) )| |  |)|| \\  / | |  `--. \\ `-' / (_)    |  `--.| |\\ \\   <br></br>\r\n    {' '})\\____/ |_|  (_)| |\\/| | /( __.'  )---'         /( __.'|_| \\)\\  <br></br>\r\n    (__)             '-'  '-'(__)     (_)           (__)        (__) <br></br>\r\n                    </pre>\r\n                    <Counter sceneId={this.props.sceneId}/>\r\n                    </div>\r\n            );\r\n        }\r\n        else if(endingType.trim() === 'good'){\r\n            return(\r\n                <div><pre className='theEnd'>\r\n            _______ .-. .-.,---.    ,---.  .-. .-. ,'|\"\\   <br/>\r\n            |__   __||  |||| .-'    | .-'  |  \\| | | |\\ \\  <br/>\r\n                   {  } )| |   | `-' || `-.    | `-.  |   | | | | \\ \\ <br/>\r\n                {   }   (_) |   | .-. || .-'    | .-'  | |\\  | | |  \\ \\   <br/>\r\n                {  }   | |   | | |)||  `--.  |  `--.| | |)| /(|`-' / <br/>\r\n                  { }  `-'   /(  (_)/( __.'  /( __.'/(  (_)(__)`--' <br/>\r\n                    {  }     (__)   (__)     (__)   (__)             <br/>\r\n                </pre></div>\r\n            );\r\n        }\r\n        else return null;\r\n    }\r\n}\r\n\r\nexport default GameOver;","import React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport Img from 'react-image'\r\nimport GameOver from './gameover';\r\nimport groupImage from './res/vac.jpg'\r\n\r\nlet formatString = string => {\r\n    return string.split( \"\\n\" ).map(function(item, index) {\r\n         return (\r\n             <span key={index}>\r\n             {item}\r\n             <br/>\r\n             </span>\r\n         )\r\n         })\r\n }\r\n\r\nclass Scene extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.scrollTo(0,document.body.scrollHeight);\r\n    }\r\n\r\n    choiceClick = (consequent, sceneHandler) => {\r\n        // console.log(\"clicked button \" + consequent);\r\n        fetch(\"http://localhost:51634/api/scenes/\" + consequent)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    sceneHandler(result);\r\n            });\r\n    }\r\n\r\n    attachOptions = (Choices, sceneHandler, buttonHidden) => {\r\n        if(buttonHidden) return <br/>;\r\n        let choicesComponent = Choices.map((choice, i) => \r\n            (\r\n                <p key={i}>\r\n                    <button key={i} onClick={this.choiceClick.bind(this, choice.Consequent, sceneHandler)}>\r\n                        {Choices[i].Text} \r\n                    </button>\r\n                </p>\r\n            )\r\n        )\r\n        \r\n        return choicesComponent;        \r\n    }\r\n\r\n    createSceneImage = (sceneData) => {\r\n        let imageToUse = sceneData.SceneImage == 'none' ? \"\" : sceneData.SceneImage;\r\n        if (sceneData.SceneId == 1) {\r\n            return (\r\n                <pre onClick={this.handleOpenModal}>\r\n                    <ReactModal\r\n                        ariaHideApp={false}\r\n                        isOpen={this.state.showModal}\r\n                        contentLabel=\"Minimal Modal Example\"\r\n                    >\r\n                        <img src={groupImage} className=\"modal\" />\r\n                    </ReactModal>\r\n                    {imageToUse}\r\n                </pre>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <pre>{imageToUse}</pre>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleOpenModal = () => {\r\n\t\tlet toggle = !this.state.showModal;\r\n\t\tthis.setState({ showModal: toggle });\r\n\t}\r\n\r\n    render() {\r\n        const {sceneHandler, sceneData, buttonHidden} = this.props;\r\n        return (\r\n         <div className=\"sceneBox\">\r\n            {formatString(sceneData.SceneContent)}\r\n            {this.createSceneImage(sceneData)}\r\n            <div className=\"buttonContainer\">\r\n                {this.attachOptions(sceneData.Choices, sceneHandler, buttonHidden, sceneData.EndingType)}\r\n            </div>\r\n            <GameOver endingType={sceneData.EndingType} sceneId={sceneData.SceneId}/>\r\n         </div>\r\n        );  \r\n    }\r\n}\r\n\r\nexport default Scene;","import React, { Component } from 'react';\r\nimport { callPlayer } from 'react-player/lib/utils';\r\n\r\nconst map = (props) =>{\r\n    const myMap =\r\n    [\r\n        [\"^\", \"|\", \"=\", \"=\", \"=\", \"=\", \"=\", \"=\", \"=\", \"|\", \"^\"],\r\n        [\"^\", \"|\", \"D\", \"=\", \"|\", \"=\", \"|\", \"=\", \"=\", \"|\", \"^\"],\r\n        [\"^\", \"|\", \"=\", \"=\", \"|\", \"=\", \"|\", \"=\", \"=\", \"|\", \"^\"],\r\n        [\"^\", \"|\", \"B\", \"=\", \"|\", \"=\", \"|\", \"=\", \"E\", \"|\", \"^\"],\r\n        [\"^\", \"|\", \"=\", \"=\", \"|\", \"=\", \"|\", \"=\", \"=\", \"|\", \"^\"],\r\n        [\"^\",\"\\\\\", \"=\", \"=\", \"=\", \"e\", \"=\", \"=\", \"=\", \"/\", \"^\"],\r\n        [\"^\", \"^\",\"\\\\\", \"-\", \"-\", \"-\", \"-\", \"-\", \"/\", \"^\", \"^\"],\r\n        [\"^\", \"^\", \"^\", \"^\", \"^\", \"^\", \"^\", \"^\", \"^\", \"^\", \"^\"]\r\n    ]\r\n    const getPlayerCoordination = playerPosition =>{\r\n        switch(playerPosition){\r\n            case 'room': return {x: 6, y: 0};\r\n            case 'dom': return {x: 3, y: 1};\r\n            case 'hall': return{x: 5, y: 3};\r\n            case 'ball': return{x: 3, y: 3};\r\n            case 'deck': return{x: 4, y: 5};\r\n            case 'elroom': return{x: 7, y: 3};\r\n        }\r\n    }\r\n    const drawMap = () => {\r\n        let outputString = \"\";\r\n        let player = getPlayerCoordination(props.playerPosition);\r\n\r\n        for (let y = 0; y < myMap.length; y++) {\r\n            for (let x = 0; x < myMap[y].length; x++) {\r\n                if (x == player.x && y == player.y) {\r\n                    outputString += \"@\"\r\n                }\r\n                else {\r\n                    outputString += myMap[y][x]\r\n                }\r\n            }\r\n            outputString += \"\\n\"\r\n        }\r\n\r\n        return outputString;\r\n    }\r\n\r\n    const formatString = string => {\r\n        return string.split( \"\\n\" ).map(function(item, index) {\r\n             return (\r\n                 <span key={index}>\r\n                 {item}\r\n                 <br/>\r\n                 </span>\r\n             )\r\n             })\r\n     }\r\n\r\n    return (\r\n        <p className=\"mapBox\">{formatString(drawMap())}</p>\r\n        \r\n    );\r\n    \r\n\r\n//         <pre> // pretty map that didn't make it...\r\n// {}                         __________<br/>\r\n// {}                        | BALLROOM |<br/>\r\n// {} | @|.....|DOM ROOM| ...|          |<br/>\r\n// {}              .         |__________|<br/>\r\n// {}              .<br/>\r\n// {} |EL ROOM|.....<br/>\r\n// {}              .<br/>\r\n// {} _____________._________________<br/>\r\n// {}\\                               /<br/>\r\n// {} \\                             /<br/>\r\n// {}  \\               EL          /<br/>\r\n// {}   (((((((((((((()))))))))))))<br/>\r\n//         </pre>\r\n    \r\n}\r\n\r\nexport default map;","import React from 'react';\r\nimport Map from './map';\r\nimport ReactModal from 'react-modal';\r\nimport easterEgg from './easterEgg.PNG';\r\n\r\nconst MapSidebar = props => {\r\n    return(\r\n        <div className='map' >\r\n            <strong>Map legend</strong> <br />\r\n            @: Player <br />\r\n            D: Dom's room <br />\r\n            B: Ballroom <br />\r\n            E: Eleanor's room <br />\r\n            e: Eleanor <br />\r\n            <div onClick={props.handleOpenModal}>\r\n                <ReactModal\r\n                    className=\"modal\"\r\n                    ariaHideApp={false}\r\n                    isOpen={props.showModal}\r\n                    contentLabel=\"Minimal Modal Example\"\r\n                >\r\n                    <img className=\"modal\" src={easterEgg} />\r\n                </ReactModal>\r\n                <Map playerPosition={props.playerPosition} />\r\n\t\t    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapSidebar;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Scene from './scene';\r\nimport YouTubePlayer from 'react-player/lib/players/YouTube';\r\nimport MapSidebar from './mapSidebar';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tcontext: [],\r\n\t\t\tplaying: false,\r\n\t\t\tmuteBtnText: \"Mute\",\r\n\t\t\tplayerPosition: 'room',\r\n\t\t\tshowModal: false\r\n\t\t}\r\n\r\n\t\tthis.handleOpenModal = this.handleOpenModal.bind(this);\r\n\t}\r\n\r\n\r\n\tasync componentDidMount() {\r\n\t\tdocument.title = \"Murder in the Pacific\"\r\n\t\tthis.startGame();\r\n\t\tsetTimeout(this.setState({ playing: true }), 3000);\r\n\t}\r\n\r\n\tstartGame = () => {\r\n\t\tthis.setState({ playerPosition: 'room' });\r\n\t\tlet newContext = [];\r\n\t\tfetch(\"http://localhost:51634/api/scenes/1\")\r\n\t\t\t.then(res => {\r\n\t\t\t\treturn res.json();\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tnewContext.push(data);\r\n\t\t\t\tthis.setState({ context: newContext });\r\n\t\t\t\tdocument.getElementsByClassName(\"gameHeader\")[0].style = \"background-color: white\";\r\n\t\t\t\tdocument.getElementsByTagName(\"body\")[0].style = \"background-color: white\";\r\n\t\t\t\tdocument.getElementsByTagName(\"div\")[0].style = \"color: black\";\r\n\t\t\t})\r\n\t\t\t.catch(rejected => console.log(rejected));\r\n\t}\r\n\r\n\taddScene = (newScene) => {\r\n\t\tlet newContext = this.state.context;\r\n\t\tnewContext.push({\r\n\t\t\tSceneId: newScene.SceneId,\r\n\t\t\tSceneContent: newScene.SceneContent,\r\n\t\t\tChoices: newScene.Choices,\r\n\t\t\tEndingType: newScene.EndingType,\r\n\t\t\tSceneImage: newScene.SceneImage,\r\n\t\t\tSceneLocation: newScene.SceneLocation\r\n\t\t});\r\n\t\tthis.setState({context: newContext});\r\n\t\tthis.setState({ playerPosition: newScene.SceneLocation });\r\n\t}\r\n\r\n\thiddenButton = (i) => {\r\n\t\treturn i !== this.state.context.length - 1;\r\n\t}\r\n\r\n\tmakeSceneComponent = (scene, i) => {\r\n\t\treturn (\r\n      <Scene\r\n        key={i} sceneData={scene} sceneHandler={this.addScene} buttonHidden={this.hiddenButton.call(this, i)} />\r\n\t\t)\r\n\t}\r\n\thandleOpenModal = () => {\r\n\t\tlet toggle = !this.state.showModal;\r\n\t\tthis.setState({ showModal: toggle });\r\n\r\n\t}\r\n\tmute = () => {\r\n\t\tlet newState;\r\n\t\tif (this.state.playing) {\r\n\t\t\tnewState = {\r\n\t\t\t\tmuteBtnText: \"Unmute\",\r\n\t\t\t\tplaying: false\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnewState = {\r\n\t\t\t\tmuteBtnText: \"Mute\",\r\n\t\t\t\tplaying: true\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.setState(newState);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"gameContainer\">\r\n\r\n\t\t\t\t<div className=\"gameHeader\">\r\n\t\t\t\t\t<h1>Murder in the Pacific</h1>\r\n\t\t\t\t\t<button onClick={this.startGame} className=\"startOverButton\">Start over</button>\r\n\t\t\t\t\t<button onClick={this.mute} className=\"muteButton\">{this.state.muteBtnText}</button>\r\n          <MapSidebar \r\n            handleOpenModal={this.handleOpenModal} \r\n            playerPosition={this.state.playerPosition}\r\n            showModal = {this.state.showModal}\r\n          />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<YouTubePlayer\r\n\t\t\t\t\tid='music-player'\r\n\t\t\t\t\turl='https://www.youtube.com/watch?v=wsKKd8cw7s8'\r\n\t\t\t\t\tloop playing={this.state.playing}\r\n\t\t\t\t\twidth=\"0px\" height=\"0px\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"sceneList\">\r\n\t\t\t\t\t\t{this.state.context.map(this.makeSceneComponent)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}